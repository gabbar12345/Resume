packages:
  yum:
    gcc: []
    gcc-c++: []
    make: []
    wget: []
    openssl-devel: []
    bzip2-devel: []
    sqlite-devel: []  # Ensure the development libraries are installed

container_commands:
  01_download_sqlite:
    command: |
      wget -O /tmp/sqlite-autoconf.tar.gz https://www.sqlite.org/2024/sqlite-autoconf-3460100.tar.gz
      if [ $? -ne 0 ]; then
        echo "Download failed"
        exit 1
      fi
  02_extract_sqlite:
    command: |
      cd /tmp
      tar xzvf sqlite-autoconf.tar.gz
      if [ $? -ne 0 ]; then
        echo "Extraction failed"
        exit 1
      fi
  03_build_and_install_sqlite:
    command: |
      cd /tmp/sqlite-autoconf-3460100
      ./configure
      if [ $? -ne 0 ]; then
        echo "Configure failed"
        exit 1
      fi
      make
      if [ $? -ne 0 ]; then
        echo "Make failed"
        exit 1
      fi
      sudo make install
      if [ $? -ne 0 ]; then
        echo "Installation failed"
        exit 1
      fi
      sudo ln -sf /usr/local/bin/sqlite3 /usr/bin/sqlite3
      if [ $? -ne 0 ]; then
        echo "Linking failed"
        exit 1
      fi
  04_rebuild_virtualenv:
    command: |
      echo "Rebuilding Python virtual environment"
      if [ -d "/var/app/venv" ]; then
        sudo rm -rf /var/app/venv
      fi
      python3 -m venv /var/app/venv
      source /var/app/venv/bin/activate
      pip install --upgrade pip
      pip install -r /var/app/current/requirements.txt
      /var/app/venv/bin/python -c "import sqlite3; print(sqlite3.sqlite_version)" > /var/log/sqlite_version.log
      if [ $? -ne 0 ]; then
        echo "Virtual environment setup failed"
        exit 1
      fi
  05_log_sqlite_version:
    command: |
      echo "Logging SQLite version"
      sqlite3 --version >> /var/log/sqlite_version.log
      /var/app/venv/*/bin/python -c "import sqlite3; print(sqlite3.sqlite_version)" >> /var/log/sqlite_version.log
    leader_only: true